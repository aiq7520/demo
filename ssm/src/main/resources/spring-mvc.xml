<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
	    http://www.springframework.org/schema/context/spring-context-4.3.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">
       
       <!-- 启动注解驱动的spring MVC功能,注册请求url和注解POJO类方法的映射-->
       <mvc:annotation-driven enable-matrix-variables="true"/>
	   <context:component-scan base-package="ssm.web"></context:component-scan>
	   
	   
	   
	   <!-- 对模型视图名称的解析,在请求时模型视图名称添加前后缀 -->
	    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
	        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
	        <property name="prefix" value="/WEB-INF/jsp/" />      <!-- 前缀 -->
	        <property name="suffix" value=".jsp" />   <!-- 后缀 -->
	    </bean>
    <!--这里是对静态资源的映射-->
    <mvc:resources mapping="js/**" location="/resources/js/" />
    <mvc:resources mapping="css/**" location="/resources/css/" />
    <mvc:resources mapping="img/**" location="/resources/img/" />
    <mvc:resources mapping="resources/cordova/**" location="/resources/cordova/" />
    
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"> 
		<property name="cacheSeconds" value="0" /> 
		<property name="messageConverters"> 
			<list> 
				<!-- 注释原因    （不注释） 将Page字符串对象响应浏览器时，响应到浏览器还是字符串 不是json对象
				（注释后的影响） @ResponseBody注解  的请求 不能返回对象（及ajax请求会报错）（未测试）
				 -->
			    <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"></bean>
			  <bean class="org.springframework.http.converter.StringHttpMessageConverter">  
                <property name="supportedMediaTypes">  
                    <list>  
                        <value>text/plain;charset=utf-8</value>  
                        <value>text/html;charset=UTF-8</value>  
                    </list>  
                </property>  
            </bean>
			</list> 
		</property>
	</bean>
	
    <!--配置拦截器, 多个拦截器,顺序执行 -->  
	<mvc:interceptors>    
	    <mvc:interceptor>    
	        <!-- 匹配的是url路径， 如果不配置或/**,将拦截所有的Controller -->  
	        <mvc:mapping path="/activiti/**" />  
	        <bean class="ssm.utils.LoginInterceptor"></bean>    
	    </mvc:interceptor>  
	    <!-- 当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法 -->  
	</mvc:interceptors>  
	
	<bean id="multipartResolver"
	        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	    <property name="maxUploadSize" value="100000"/>
	</bean>
</beans>